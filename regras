/* Syntax convention
clear
*/
/* Rules declared like name ={ ... } */
/* Reserved keywords like #name */
/* Identificators like $id */
/* Classes of tokens like %rulename */
/* Subrules invoked by @rulename */

program ={
    #program $id #;
    @declaracoes_variaveis
    @declaracoes_de_subprogramas
    @comando_composto
    #.
}

declaracoes_variaveis ={
    #var @lista_declaracoes_variaveis
|   £
}

lista_declaracoes_variaveis ={
    @lista_de_identificadores #: @tipo #; @lista_declaracoes_variaveis_linha
}

lista_declaracoes_variaveis_linha ={
    @lista_de_identificadores #: @tipo #; @lista_declaracoes_variaveis_linha
|   £
}

lista_de_identificadores ={
    $id @lista_de_identificadores_linha
}

lista_de_identificadores_linha ={
    #, $id @lista_de_identificadores_linha
|   £
}

tipo ={
    #integer
|   #real
|   #boolean
}

declaracoes_de_subprogramas ={
    @declaracao_de_subprograma #; @declaracoes_de_subprogramas
|   £
}

declaracao_de_subprograma ={
    #procedure $id @argumentos #;
    @declaracoes_variaveis
    @declaracoes_de_subprogramas
    @comando_composto
}

argumentos ={
    #( @lista_de_parametros #)
|   £
}

lista_de_parametros ={
    @lista_de_identificadores #: @tipo @lista_de_parametros_linha
}

lista_de_parametros_linha ={
    #; @lista_de_identificadores #: @tipo @lista_de_parametros_linha
|   £
}

comando_composto ={
    #begin
    @comandos_opcionais 
    #end
}

comandos_opcionais ={
    @lista_de_comandos 
|   £
}

lista_de_comandos ={
    @comando @lista_de_comandos_int
}

lista_de_comandos_int ={
    #; @lista_de_comandos_linha
|   £
}

lista_de_comandos_linha ={
    @comando #; @lista_de_comandos_linha
|   £
}

comando ={
    @uso_identificador
|   @comando_composto
|   #if @expressao #then @comando @parte_else
|   #while @expressao #do @comando
}

uso_identificador ={
    $id @uso_identificador_term
}

uso_identificador_term ={
    @atribuicao_variavel
|   @ativacao_de_procedimento
|   £
}

atribuicao_variavel ={
    #:= @expressao
}

variavel ={
    $id
}

ativacao_de_procedimento ={
    #( @lista_de_expressoes #)
}

parte_else ={
    #else @comando
|   £
}

lista_de_expressoes ={
    @expressao
|   @lista_de_epressoes #, @expressao
}

expressao ={
    @expressao_simples @expressao_term
}

expressao_term ={
    @op_relacional @expressao_simples
|   £
}

expressao_simples ={
    @termo @expressao_simples_linha
|   @sinal @termo @expressao_simples_linha
}

expressao_simples_linha ={
    @op_aditivo @termo @expressao_simples_linha
|   £
}

termo ={
    @fator @termo_linha
}

termo_linha ={
    @op_multiplicativo @fator @termo_linha
|   £
}

fator ={
    $id 
|   $id #( @lista_de_expressoes #) 
|   %inteiro
|   %real 
|   #true 
|   #false 
|   #( @expressao #) 
|   #not @fator
}

sinal ={
    #+ | #-
}

op_relacional ={
    #= | #< | #> | #<= | #>= | #<>
}

op_aditivo ={
    #+ | #- | #or
}

op_multiplicativo ={
    #* | #/ | #and
}

